const express = require('express');
const cors = require('cors');
const bodyParser = require('body-parser');
const { MongoClient } = require('mongodb');

const app = express();

// Use CORS middleware
app.use(cors()); // This allows all origins, you can configure it further

// Middleware to parse JSON requests
app.use(bodyParser.json());

const uri = "mongodb+srv://mimikyow:rapid@rapid.5uvhi.mongodb.net/?retryWrites=true&w=majority&appName=RAPID";
const client = new MongoClient(uri, {
    useNewUrlParser: true,
    useUnifiedTopology: true,
});

let storesCollection; // This will hold the reference to the stores collection

// Connect to MongoDB
client.connect()
    .then(() => {
        storesCollection = client.db('RAPID').collection('stores'); // Use 'stores' as the collection name
        console.log('Connected to MongoDB');
    })
    .catch((err) => {
        console.error('Error connecting to MongoDB:', err);
    });

// Store registration endpoint
app.post('/register-store', async (req, res) => {
    const { name, address, hours, contact, supplyType, supplyStatus } = req.body;

    try {
        // Validate the required fields
        if (!name || !address || !hours || !contact || !supplyType || !supplyStatus) {
            return res.status(400).json({ error: 'All fields are required' });
        }

        // Create the store object
        const newStore = { name, address, hours, contact, supplyType, supplyStatus };

        // Insert the store into the database
        const result = await storesCollection.insertOne(newStore);

        if (result.acknowledged) {
            res.json({ message: 'Store registered successfully' });
        } else {
            res.status(500).json({ error: 'Error registering store' });
        }
    } catch (err) {
        console.error('Error during store registration:', err);
        res.status(500).json({ error: 'Error registering store' });
    }
});

// Set up the server to listen on port 5000
app.listen(5000, () => {
    console.log('Server running on port 5000');
});
